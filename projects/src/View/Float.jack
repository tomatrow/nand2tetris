/* 
    Down to earth description of floating point arithmetic. 
    http://www.petebecker.com/js/js200006.html
*/

class Float {
    field int mantissa, exponent; 

    constructor Float new(int Amantissa, int Aexponent) {
        let mantissa = Amantissa;
        let exponent = Aexponent;

        return this;
    }

    function Float default() {
        return Float.new(0,0);
    }

    method int getMantissa() {
        return mantissa;
    }

    method int getExponent() {
        return exponent;
    }

    method void dispose() {
        do Memory.deAlloc(this);
        return;
    }

    method void add(Float f) {
        var int otherExp, otherMan, exDiff;

        let otherExp = f.getExponent();
        let otherMan = f.getMantissa();
        let exDiff = exponent - otherExp;

        // no point in adding if they're too far apart
        if (Math.abs(exDiff) > 4) {
            if (exDiff > 0) { 
                let mantissa = otherMan;
                let exponent = otherExp;
            } 
            return;
        }

        if (exDiff > 0) { // this is greater than that 
            while (otherExp < exponent) {
                let otherExp = otherExp + 1;
                let otherMan = otherMan / 10;
            }
            let mantissa = mantissa + otherMan;
        } else {
            if (exDiff < 0) { // that is greater than this 
                while (exponent < otherExp) {
                    let exponent = exponent + 1;
                    let mantissa = mantissa / 10;
                }
                let mantissa = mantissa + otherMan;
                do normalize();
            } else { // they are equal
                let mantissa = mantissa + otherMan;
            }
        }

        return;
    }

    method void sub(Float f) {
        var Float temp;
        let temp = f.copy();
        do temp.neg();
        do add(temp);
        do temp.dispose();
        return;
    }

    method void mult(Float f) {
        let exponent = exponent + f.getExponent();
        let mantissa = mantissa * f.getMantissa();
        do normalize();
        return;
    }

    method void div(Float f) {
        let exponent = exponent - f.getExponent();
        let mantissa = mantissa / f.getMantissa();
        do normalize();
        return;
    }

    method void neg() {
        let mantissa = mantissa * -1;
        return;
    }

    method void normalize() {
        while (Math.abs(mantissa) > 9999) {
            let mantissa = mantissa / 10;
            let exponent = exponent + 1;
        }
        return;
    }

    method Float copy() {
        return Float.new(mantissa, exponent);
    }

    method int toInt() {
        var int m, e;

        let m = mantissa;
        let e = exponent;

        if (~(e = 0)) {
            if (e > 0) {
                while (e > 0) {
                    let e = e - 1;
                    let m = m * 10;
                }
            } else {
                while (e < 0) {
                    let e = e + 1;
                    let m = m / 10;
                }
            }
        }

        return m;
    }
}
